buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
         classpath 'com.bmuschko:gradle-cargo-plugin:2.2.3'
     }
}

// Plugins to apply: Java (for compiling), Jetty (to test locally), War (to create WAR file)
apply plugin: 'java'
apply plugin: 'war'
//apply plugin: 'org.akhikhl.gretty'
apply plugin: 'com.bmuschko.cargo'
//define plugin for AWS
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.50'
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	//hk2
	compile 'org.glassfish.hk2:hk2-api:2.5.0-b05'
	compile 'org.glassfish.hk2:hk2-locator:2.5.0-b05'
	compile 'org.glassfish.hk2:hk2-utils:2.5.0-b05'
	//Jackson for JSON
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.8.0'
    //Java web service
    compile 'org.ow2.util.bundles:javassist-3.14.0-GA:1.0.0'
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    //Jersey dependencies
    compile 'org.glassfish.jersey.core:jersey-client:2.23.2'
	compile 'org.glassfish.jersey.core:jersey-common:2.23.2'
	compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.23.2'
	compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.23.2'
	compile 'org.glassfish.jersey.bundles.repackaged:jersey-guava:2.23.2'
	compile 'org.glassfish.jersey.core:jersey-server:2.23.2'
	//Validation
	compile 'javax.validation:validation-api:1.1.0.Final'
	//MySQL lib
	compile 'mysql:mysql-connector-java:5.1.40'
	//AWS lib
	compile 'com.amazonaws:aws-java-sdk-s3'
    // Test compiles here.
    testCompile 'junit:junit:4.12'
    def cargoVersion = '1.4.5'
cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
      "org.codehaus.cargo:cargo-ant:$cargoVersion"

      compile 'org.webjars:jquery:2.0.3-1'
   compile 'org.webjars:angularjs:1.2.10'
   compile 'org.webjars:underscorejs:1.5.2-2'

   compile 'org.webjars:jquery-ui:1.10.3'
   compile 'org.webjars:bootstrap:3.0.3'

   // angular-translate
   compile 'org.webjars:angular-translate:1.1.1'
   compile 'org.webjars:angular-translate-handler-log:0.1.3'
   compile 'org.webjars:angular-translate-interpolation-messageformat:0.1.2'
   compile 'org.webjars:angular-translate-loader-static-files:0.1.6'
   compile 'org.webjars:angular-translate-loader-url:0.1.2'
   compile 'org.webjars:angular-translate-storage-cookie:0.1.3'
   compile 'org.webjars:angular-translate-storage-local:0.1.3'

   // angular-ui
   compile 'org.webjars:angular-ui:0.4.0-1'
   compile 'org.webjars:angular-ui-utils:0.1.0'
   compile 'org.webjars:angular-ui-bootstrap:0.9.0'
}
war.archiveName = "ROOT"
cargo {
    containerId = 'tomcat7x'
    port = 8080

    deployable {
        file = file('build/libs/ROOT')
        //context = 'BuilderAppServer'
        context = ''
    }

    local {
        installer {
            installUrl = 'https://archive.apache.org/dist/tomcat/tomcat-7/v7.0.67/bin/apache-tomcat-7.0.67.zip'
            downloadDir = file("$buildDir/download")
            extractDir = file("$buildDir/extract")
        }
    }
  }


  cargoRunLocal.dependsOn war
